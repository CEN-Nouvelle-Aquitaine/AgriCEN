{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation AgriCEN","text":"<p>Bienvenue dans la documentation de l'application AgriCEN !</p>"},{"location":"#principales-fonctionnalites","title":"Principales fonctionnalit\u00e9s","text":"<ul> <li>Interface cartographique : Visualisation des contrats agricoles sur une carte interactive</li> <li>Gestion des contrats : Cr\u00e9ation, \u00e9dition et suppression des contrats agricoles</li> <li>Int\u00e9gration de l'API SIRENE : R\u00e9cup\u00e9ration automatique des donn\u00e9es relatives aux soci\u00e9t\u00e9s via le num\u00e9ro SIRET.</li> <li>Visualisation des donn\u00e9es : Tableaux de bord et statistiques en direct</li> </ul>"},{"location":"#guide-de-demarrage-rapide","title":"Guide de d\u00e9marrage rapide","text":"<ol> <li>Connexion \u00e0 l'application</li> <li>Navigation dans l'interface cartographique</li> <li>Cr\u00e9ation d'un nouveau contrat</li> </ol> <p>Pour les d\u00e9veloppeurs, consultez la documentation technique et le guide d'installation.</p>"},{"location":"development/installation/","title":"Installation","text":"<p>Ce guide d\u00e9taille les \u00e9tapes n\u00e9cessaires pour installer et configurer l'environnement de d\u00e9veloppement de l'application AgriCEN.</p>"},{"location":"development/installation/#prerequis","title":"Pr\u00e9requis","text":"<p>Avant de commencer, assurez-vous que les composants suivants sont install\u00e9s sur votre syst\u00e8me :</p> <ul> <li>Python 3.8 ou sup\u00e9rieur</li> <li>PostgreSQL 12 ou sup\u00e9rieur avec l'extension PostGIS</li> <li>Git</li> </ul>"},{"location":"development/installation/#recuperation-du-code-source","title":"R\u00e9cup\u00e9ration du code source","text":"<p>Clonez le d\u00e9p\u00f4t Git de l'application :</p> <pre><code>git clone https://github.com/CEN-Nouvelle-Aquitaine/AgriCEN.git\ncd AgriCEN/Flask-Leaflet\n</code></pre>"},{"location":"development/installation/#creation-de-lenvironnement-virtuel-python","title":"Cr\u00e9ation de l'environnement virtuel Python","text":"<p>Il est recommand\u00e9 d'utiliser un environnement virtuel pour isoler les d\u00e9pendances de l'application :</p>"},{"location":"development/installation/#sous-windows","title":"Sous Windows","text":"<pre><code>python -m venv venv\nvenv\\Scripts\\activate\n</code></pre>"},{"location":"development/installation/#sous-linuxmacos","title":"Sous Linux/macOS","text":"<pre><code>python -m venv venv\nsource venv/bin/activate\n</code></pre>"},{"location":"development/installation/#installation-des-dependances","title":"Installation des d\u00e9pendances","text":"<p>Installez toutes les d\u00e9pendances n\u00e9cessaires au fonctionnement de l'application :</p> <pre><code>pip install -r requirements.txt\n</code></pre>"},{"location":"development/installation/#configuration-de-la-base-de-donnees","title":"Configuration de la base de donn\u00e9es","text":""},{"location":"development/installation/#creation-des-bases-de-donnees-postgresql","title":"Cr\u00e9ation des bases de donn\u00e9es PostgreSQL","text":"<p>L'application n\u00e9cessite deux bases de donn\u00e9es PostgreSQL :</p> <ol> <li>Une base principale pour les donn\u00e9es applicatives</li> <li>Une base secondaire pour les donn\u00e9es spatiales</li> </ol> <pre><code>-- Se connecter \u00e0 PostgreSQL en tant qu'utilisateur avec des privil\u00e8ges administratifs\nCREATE DATABASE agricen;\nCREATE DATABASE fonciercen;\n\n-- Activer l'extension PostGIS sur les deux bases\n\\c agricen\nCREATE EXTENSION postgis;\n\n\\c fonciercen\nCREATE EXTENSION postgis;\n\n-- Cr\u00e9er un utilisateur d\u00e9di\u00e9 (optionnel mais recommand\u00e9)\nCREATE USER agricen_user WITH PASSWORD 'mot_de_passe_s\u00e9curis\u00e9';\nGRANT ALL PRIVILEGES ON DATABASE agricen TO agricen_user;\nGRANT ALL PRIVILEGES ON DATABASE fonciercen TO agricen_user;\n</code></pre> <p>Apr\u00e8s avoir cr\u00e9\u00e9 les bases de donn\u00e9es et configur\u00e9 la connexion, utilisez le script <code>create_db.py</code> pour g\u00e9n\u00e9rer automatiquement toutes les tables et sch\u00e9mas n\u00e9cessaires :</p> <pre><code>python create_db.py\n</code></pre> <p>Ce script va automatiquement :</p> <ol> <li>Cr\u00e9er les sch\u00e9mas n\u00e9cessaires (<code>saisie</code>, <code>referentiels</code>, etc.)</li> <li>G\u00e9n\u00e9rer toutes les tables \u00e0 partir des mod\u00e8les d\u00e9finis dans <code>models.py</code></li> <li>Configurer les relations entre les tables et les contraintes</li> <li>Initialiser les extensions spatiales requises pour GeoAlchemy2</li> </ol> <p>Aucune manipulation manuelle des sch\u00e9mas ou tables n'est n\u00e9cessaire.</p>"},{"location":"development/installation/#fichier-env","title":"Fichier .env","text":"<p>Cr\u00e9ez un fichier <code>.env</code> \u00e0 la racine du projet pour configurer les variables d'environnement :</p> <pre><code># Environnement\nFLASK_ENV=development\nFLASK_APP=app.py\n\n# Base de donn\u00e9es\nDATABASE_URL=postgresql://agricen_user:mot_de_passe_s\u00e9curis\u00e9@localhost:5432/agricen\nSECONDARY_DATABASE_URL=postgresql://agricen_user:mot_de_passe_s\u00e9curis\u00e9@localhost:5432/fonciercen\n\n# S\u00e9curit\u00e9\nSECRET_KEY=g\u00e9n\u00e9rer_une_cl\u00e9_al\u00e9atoire_ici\n\n# Azure AD (\u00e0 remplacer par vos propres valeurs)\nCLIENT_ID=votre_client_id_azure\nCLIENT_SECRET=votre_client_secret_azure\nTENANT_ID=votre_tenant_id_azure\n</code></pre> <p>G\u00e9n\u00e9ration de cl\u00e9 secr\u00e8te</p> <p>Pour g\u00e9n\u00e9rer une cl\u00e9 secr\u00e8te s\u00e9curis\u00e9e, vous pouvez utiliser la commande suivante : <pre><code>python -c \"import secrets; print(secrets.token_hex(32))\"\n</code></pre></p>"},{"location":"development/installation/#configuration-microsoft-entra-id","title":"Configuration Microsoft Entra ID","text":"<p>Pour utiliser l'authentification Microsoft, vous devez enregistrer votre application dans Microsoft Entra ID :</p> <ol> <li>Connectez-vous au Portail Microsoft Entra ID</li> <li>Acc\u00e9dez \u00e0 Entra ID &gt; Applications &gt; Inscriptions d'applications &gt; Nouvelle inscription</li> <li>Donnez un nom \u00e0 votre application</li> <li>Configurez les URI de redirection (ex: <code>https://localhost:8000/auth/callback</code> pour le d\u00e9veloppement local)</li> <li>Notez l'ID client (client_id)</li> <li>Dans Certificats et secrets, cr\u00e9ez un nouveau secret client</li> <li>Notez la valeur du secret (client_secret)</li> </ol>"},{"location":"development/installation/#lancement-du-serveur-de-developpement","title":"Lancement du serveur de d\u00e9veloppement","text":"<p>Une fois l'installation et la configuration termin\u00e9es, activez votre environnement virtuel et lancez le serveur de d\u00e9veloppement :</p> <pre><code> waitress-serve --listen=localhost:8800 views:app  \n</code></pre> <p>L'application est maintenant accessible \u00e0 l'adresse http://localhost:8800.</p>"},{"location":"development/installation/#resolution-des-problemes-courants","title":"R\u00e9solution des probl\u00e8mes courants","text":""},{"location":"development/installation/#problemes-de-connexion-a-la-base-de-donnees","title":"Probl\u00e8mes de connexion \u00e0 la base de donn\u00e9es","text":"<ul> <li>V\u00e9rifiez que le service PostgreSQL est bien d\u00e9marr\u00e9</li> <li>V\u00e9rifiez que les identifiants dans le fichier <code>.env</code> sont corrects</li> <li>Assurez-vous que l'utilisateur a les droits sur les sch\u00e9mas <code>saisie</code> et <code>referentiel</code></li> </ul>"},{"location":"development/installation/#erreurs-lors-de-lauthentification-microsoft","title":"Erreurs lors de l'authentification Microsoft","text":"<ul> <li>V\u00e9rifiez que les identifiants Entra ID sont corrects</li> <li>Assurez-vous que les URLs de redirection sont bien configur\u00e9es dans le portail Azure</li> <li>V\u00e9rifiez que les permissions requises sont activ\u00e9es pour votre application</li> </ul>"},{"location":"development/installation/#problemes-avec-les-donnees-spatiales","title":"Probl\u00e8mes avec les donn\u00e9es spatiales","text":"<ul> <li>Confirmez que l'extension PostGIS est bien install\u00e9e</li> <li>V\u00e9rifiez la connection \u00e0 la base de donn\u00e9es secondaire</li> </ul>"},{"location":"technical/api/","title":"API","text":"<p>L'application AgriCEN expose plusieurs points d'API pour faciliter l'interaction avec le frontend et l'int\u00e9gration avec des syst\u00e8mes externes. Ces API sont principalement utilis\u00e9es par l'interface JavaScript pour les requ\u00eates AJAX.</p>"},{"location":"technical/api/#api-geojson","title":"API GeoJSON","text":""},{"location":"technical/api/#recuperation-de-tous-les-sites-cen","title":"R\u00e9cup\u00e9ration de tous les sites CEN","text":"<pre><code>GET /sites_cen_geojson\n</code></pre> <p>Cette API renvoie les donn\u00e9es de tous les sites du CEN au format GeoJSON pour affichage sur la carte.</p>"},{"location":"technical/api/#exemple-de-reponse","title":"Exemple de r\u00e9ponse","text":"<pre><code>{\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"geometry\": {\n        \"type\": \"MultiPolygon\",\n        \"coordinates\": [...]\n      },\n      \"properties\": {\n        \"idsite\": 1,\n        \"codesite\": \"CEN001\",\n        \"nom_site\": \"Prairie de Montbel\"\n      }\n    },\n    // Autres sites...\n  ]\n}\n</code></pre>"},{"location":"technical/api/#implementation","title":"Impl\u00e9mentation","text":"<pre><code>@app.route('/sites_cen_geojson')\ndef get_all_sites_cen_geojson():\n    \"\"\"R\u00e9cup\u00e8re les donn\u00e9es GeoJSON pour TOUS les sites CEN.\n    Utilis\u00e9 pour afficher tous les sites sur la carte principale.\"\"\"\n    sites = VueSites.query.all()\n    features = []\n\n    for site in sites:\n        # Convertir la g\u00e9om\u00e9trie PostGIS en GeoJSON\n        shape = to_shape(site.geom)\n        geojson = mapping(shape)\n\n        feature = {\n            \"type\": \"Feature\",\n            \"geometry\": geojson,\n            \"properties\": {\n                \"idsite\": site.idsite,\n                \"codesite\": site.codesite,\n                \"nom_site\": site.nom_site\n            }\n        }\n        features.append(feature)\n\n    geojson_data = {\n        \"type\": \"FeatureCollection\",\n        \"features\": features\n    }\n\n    return jsonify(geojson_data)\n</code></pre>"},{"location":"technical/api/#recuperation-dun-site-cen-specifique","title":"R\u00e9cup\u00e9ration d'un site CEN sp\u00e9cifique","text":"<pre><code>GET /site_cen_geojson/&lt;int:site_id&gt;\n</code></pre> <p>Cette API renvoie les donn\u00e9es d'un site CEN sp\u00e9cifique au format GeoJSON.</p>"},{"location":"technical/api/#parametres","title":"Param\u00e8tres","text":"<ul> <li><code>site_id</code> : ID du site \u00e0 r\u00e9cup\u00e9rer</li> </ul>"},{"location":"technical/api/#implementation_1","title":"Impl\u00e9mentation","text":"<pre><code>@app.route('/site_cen_geojson/&lt;int:site_id&gt;')\ndef get_single_site_cen_geojson(site_id):\n    \"\"\"\n    R\u00e9cup\u00e8re les donn\u00e9es GeoJSON pour un seul site CEN sp\u00e9cifi\u00e9 par son ID.\n    Cela permet d'optimiser le chargement de la page edit_contract.html.\n    \"\"\"\n    site = VueSites.query.filter_by(idsite=site_id).first()\n\n    if not site:\n        return jsonify({\"error\": \"Site non trouv\u00e9\"}), 404\n\n    # Convertir la g\u00e9om\u00e9trie PostGIS en GeoJSON\n    shape = to_shape(site.geom)\n    geojson = mapping(shape)\n\n    feature = {\n        \"type\": \"Feature\",\n        \"geometry\": geojson,\n        \"properties\": {\n            \"idsite\": site.idsite,\n            \"codesite\": site.codesite,\n            \"nom_site\": site.nom_site\n        }\n    }\n\n    geojson_data = {\n        \"type\": \"FeatureCollection\",\n        \"features\": [feature]\n    }\n\n    return jsonify(geojson_data)\n</code></pre>"},{"location":"technical/api/#api-de-recherche","title":"API de recherche","text":""},{"location":"technical/api/#recherche-dagriculteur","title":"Recherche d'agriculteur","text":"<pre><code>POST /api/search_agriculteur\n</code></pre> <p>Permet de rechercher des agriculteurs par nom ou pr\u00e9nom.</p>"},{"location":"technical/api/#corps-de-la-requete","title":"Corps de la requ\u00eate","text":"<pre><code>{\n  \"search_term\": \"dupont\"\n}\n</code></pre>"},{"location":"technical/api/#exemple-de-reponse_1","title":"Exemple de r\u00e9ponse","text":"<pre><code>[\n  {\n    \"id\": 1,\n    \"nom\": \"DUPONT\",\n    \"prenom\": \"Jean\",\n    \"display\": \"DUPONT Jean\"\n  },\n  {\n    \"id\": 5,\n    \"nom\": \"DUPONT\",\n    \"prenom\": \"Marie\",\n    \"display\": \"DUPONT Marie\"\n  }\n]\n</code></pre>"},{"location":"technical/api/#implementation_2","title":"Impl\u00e9mentation","text":"<pre><code>@app.route('/api/search_agriculteur', methods=['POST'])\ndef search_agriculteur():\n    search_term = request.json.get(\"search_term\", \"\").strip().lower()\n    if not search_term:\n        return jsonify([]), 200\n\n    # Rechercher les agriculteurs dont le nom ou le pr\u00e9nom contient le terme de recherche\n    agriculteurs = Agriculteur.query.filter(\n        db.or_(\n            db.func.lower(Agriculteur.nom_agri).contains(search_term),\n            db.func.lower(Agriculteur.prenom_agri).contains(search_term)\n        )\n    ).all()\n\n    # Formater les r\u00e9sultats\n    results = [{\n        'id': agri.id_agriculteur,\n        'nom': agri.nom_agri,\n        'prenom': agri.prenom_agri,\n        'display': f\"{agri.nom_agri} {agri.prenom_agri}\"\n    } for agri in agriculteurs]\n\n    return jsonify(results), 200\n</code></pre>"},{"location":"technical/api/#recherche-de-referent","title":"Recherche de r\u00e9f\u00e9rent","text":"<pre><code>POST /api/search_referent\n</code></pre> <p>Permet de rechercher des r\u00e9f\u00e9rents par nom ou pr\u00e9nom.</p>"},{"location":"technical/api/#corps-de-la-requete_1","title":"Corps de la requ\u00eate","text":"<pre><code>{\n  \"search_term\": \"martin\"\n}\n</code></pre>"},{"location":"technical/api/#exemple-de-reponse_2","title":"Exemple de r\u00e9ponse","text":"<pre><code>[\n  {\n    \"nom\": \"MARTIN\",\n    \"prenom\": \"Sophie\",\n    \"display\": \"MARTIN Sophie\"\n  }\n]\n</code></pre>"},{"location":"technical/api/#implementation_3","title":"Impl\u00e9mentation","text":"<pre><code>@app.route('/api/search_referent', methods=['POST'])\ndef search_referent():\n    search_term = request.json.get(\"search_term\", \"\").strip().lower()\n    if not search_term:\n        return jsonify([]), 200\n\n    # Rechercher les r\u00e9f\u00e9rents dont le nom ou le pr\u00e9nom contient le terme de recherche\n    referents = Referent.query.filter(\n        db.or_(\n            db.func.lower(Referent.nom_referent).contains(search_term),\n            db.func.lower(Referent.prenom_referent).contains(search_term),\n            db.func.lower(db.func.concat(Referent.nom_referent, ' ', Referent.prenom_referent)).contains(search_term)\n        )\n    ).all()\n\n    # Formater les r\u00e9sultats\n    results = [\n        {\n            'nom': referent.nom_referent,\n            'prenom': referent.prenom_referent,\n            'display': f\"{referent.nom_referent} {referent.prenom_referent}\"\n        }\n        for referent in referents\n    ]\n\n    return jsonify(results), 200\n</code></pre>"},{"location":"technical/api/#api-siret","title":"API SIRET","text":""},{"location":"technical/api/#verification-de-contrat-existant-par-siret","title":"V\u00e9rification de contrat existant par SIRET","text":"<pre><code>GET /api/check_existing_contract_by_siret/&lt;siret&gt;\n</code></pre> <p>V\u00e9rifie si un SIRET est d\u00e9j\u00e0 associ\u00e9 \u00e0 un contrat existant.</p>"},{"location":"technical/api/#parametres_1","title":"Param\u00e8tres","text":"<ul> <li><code>siret</code> : Num\u00e9ro SIRET \u00e0 v\u00e9rifier (14 caract\u00e8res)</li> </ul>"},{"location":"technical/api/#exemple-de-reponse-contrat-trouve","title":"Exemple de r\u00e9ponse (contrat trouv\u00e9)","text":"<pre><code>{\n  \"exists\": true,\n  \"contract_id\": 42,\n  \"nom_societe\": \"FERME DES OLIVIERS\"\n}\n</code></pre>"},{"location":"technical/api/#exemple-de-reponse-pas-de-contrat","title":"Exemple de r\u00e9ponse (pas de contrat)","text":"<pre><code>{\n  \"exists\": false\n}\n</code></pre>"},{"location":"technical/api/#implementation_4","title":"Impl\u00e9mentation","text":"<pre><code>@app.route('/api/check_existing_contract_by_siret/&lt;siret&gt;', methods=['GET'])\ndef check_existing_contract_by_siret(siret):\n    \"\"\"\n    V\u00e9rifie si un SIRET correspond \u00e0 un contrat existant et renvoie l'ID du contrat et le nom de la soci\u00e9t\u00e9\n    \"\"\"\n    try:\n        # Rechercher un contrat associ\u00e9 au SIRET sp\u00e9cifi\u00e9 avec le nom de la soci\u00e9t\u00e9\n        result = db.session.query(Contrat.id_contrat, Societe.nom_societe)\\\n            .join(Societe, Contrat.id_societe == Societe.id_societe)\\\n            .filter(Societe.siret == siret)\\\n            .first()\n\n        if result:\n            return jsonify({\n                'exists': True,\n                'contract_id': result[0],\n                'nom_societe': result[1] or 'Nom non sp\u00e9cifi\u00e9'\n            })\n        else:\n            return jsonify({'exists': False})\n    except Exception as e:\n        logging.error(f\"Erreur lors de la v\u00e9rification du SIRET {siret}: {e}\")\n        return jsonify({\n            'exists': False,\n            'error': str(e)\n        }), 500\n</code></pre>"},{"location":"technical/api/#recuperation-des-donnees-siret","title":"R\u00e9cup\u00e9ration des donn\u00e9es SIRET","text":"<pre><code>POST /siret_lookup\n</code></pre> <p>R\u00e9cup\u00e8re les informations d'une entreprise via l'API SIRENE \u00e0 partir d'un num\u00e9ro SIRET.</p>"},{"location":"technical/api/#corps-de-la-requete_2","title":"Corps de la requ\u00eate","text":"<pre><code>{\n  \"siret\": \"12345678901234\"\n}\n</code></pre>"},{"location":"technical/api/#exemple-de-reponse_3","title":"Exemple de r\u00e9ponse","text":"<pre><code>{\n  \"success\": true,\n  \"data\": {\n    \"nom_societe\": \"FERME DES OLIVIERS\",\n    \"categorie_juridique\": \"5499\",\n    \"activite_principale\": \"0111Z\",\n    \"tranche_effectif\": \"11\",\n    \"adresse_etablissement\": \"123 ROUTE DE LA COLLINE\",\n    \"commune_etablissement\": \"AIX-EN-PROVENCE\",\n    \"existe_en_base\": false\n  }\n}\n</code></pre>"},{"location":"technical/api/#integration-api-externe-sirene-insee","title":"Int\u00e9gration API externe : SIRENE (INSEE)","text":"<p>L'application AgriCEN s'int\u00e8gre avec l'API SIRENE de l'INSEE pour r\u00e9cup\u00e9rer automatiquement les informations des entreprises agricoles \u00e0 partir de leur num\u00e9ro SIRET.</p>"},{"location":"technical/api/#description-de-lintegration","title":"Description de l'int\u00e9gration","text":"<p>L'API SIRENE permet d'acc\u00e9der \u00e0 la base SIRENE (Syst\u00e8me Informatique pour le R\u00e9pertoire des Entreprises et des \u00c9tablissements) qui contient les informations sur toutes les entreprises et \u00e9tablissements fran\u00e7ais.</p>"},{"location":"technical/api/#implementation-dans-agricen","title":"Impl\u00e9mentation dans AgriCEN","text":"<p>L'application utilise la fonction <code>fetch_siret_data</code> dans <code>views.py</code> qui encapsule les appels \u00e0 l'API SIRENE :</p> <pre><code>def fetch_siret_data(siret, flash_messages = False):\n    \"\"\"\n    R\u00e9cup\u00e8re les informations d'une entreprise via l'API SIRENE en fonction du num\u00e9ro SIRET.\n    \"\"\"\n    # Validation du SIRET (14 chiffres)\n    if not siret or len(siret) != 14 or not siret.isdigit():\n        return {\"error\": \"Le num\u00e9ro SIRET est invalide.\"}, 400\n\n    url = f\"https://api.insee.fr/api-sirene/3.11/siret/{siret}\"\n    headers = {\n        \"accept\": \"application/json\",\n        \"X-INSEE-Api-Key-Integration\": os.environ.get(\"INSEE_API_KEY\"),\n    }\n\n    # Appel \u00e0 l'API et traitement de la r\u00e9ponse\n    # ...\n</code></pre>"},{"location":"technical/api/#donnees-recuperees","title":"Donn\u00e9es r\u00e9cup\u00e9r\u00e9es","text":"<p>La fonction extrait et structure les informations suivantes de l'API SIRENE :</p> <ul> <li>SIREN : Identifiant de l'entreprise</li> <li>D\u00e9nomination : Nom officiel de l'entreprise</li> <li>Activit\u00e9 principale : Code NAF/APE</li> <li>Cat\u00e9gorie juridique : Forme juridique (SARL, SA, etc.)</li> <li>Tranche d'effectif : Nombre approximatif d'employ\u00e9s</li> <li>Adresse compl\u00e8te : Adresse format\u00e9e de l'\u00e9tablissement</li> </ul>"},{"location":"technical/api/#format-de-reponse","title":"Format de r\u00e9ponse","text":"<p>Une r\u00e9ponse r\u00e9ussie renvoie un objet structur\u00e9 avec les informations de l'entreprise :</p> <pre><code>{\n  \"siren\": \"123456789\",\n  \"denomination\": \"EXPLOITATION AGRICOLE EXEMPLE\",\n  \"activite_principale\": \"01.11Z\",\n  \"categorie_juridique\": \"5499\",\n  \"tranche_effectif\": \"11\",\n  \"adresse_etablissement\": \"123 ROUTE DES CHAMPS, 33000 BORDEAUX\"\n}\n</code></pre>"},{"location":"technical/api/#utilisation-dans-lapplication","title":"Utilisation dans l'application","text":"<p>Cette API est principalement utilis\u00e9e pour :</p> <ol> <li>Pr\u00e9-remplir automatiquement les informations de l'exploitation agricole lors de la cr\u00e9ation/modification de contrats</li> <li>V\u00e9rifier et valider les num\u00e9ros SIRET saisis par les utilisateurs</li> <li>S'assurer de la coh\u00e9rence des donn\u00e9es enregistr\u00e9es</li> </ol>"},{"location":"technical/api/#gestion-des-erreurs","title":"Gestion des erreurs","text":"<p>La fonction g\u00e8re plusieurs cas d'erreur :</p> <ul> <li>SIRET invalide (format incorrect)</li> <li>\u00c9tablissement non trouv\u00e9</li> <li>Erreurs d'API (probl\u00e8mes d'autorisation, timeout, etc.)</li> <li>Erreurs de communication r\u00e9seau</li> </ul>"},{"location":"technical/api/#appel-des-api-depuis-le-frontend","title":"Appel des API depuis le frontend","text":"<p>Exemple d'appel d'API depuis JavaScript :</p> <pre><code>// Recherche d'agriculteur\nasync function searchAgriculteur(searchTerm) {\n    try {\n        const response = await fetch('/api/search_agriculteur', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ search_term: searchTerm })\n        });\n\n        if (!response.ok) {\n            throw new Error('Erreur r\u00e9seau');\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error('Erreur lors de la recherche:', error);\n        return [];\n    }\n}\n</code></pre>"},{"location":"technical/architecture/","title":"Architecture de l'application","text":""},{"location":"technical/architecture/#composants-principaux","title":"Composants principaux","text":""},{"location":"technical/architecture/#backend","title":"Backend","text":"<p>Le backend est d\u00e9velopp\u00e9 avec Flask :</p> <ul> <li>Flask : Framework web principal</li> <li>SQLAlchemy : ORM (Object-Relational Mapping) pour interagir avec la base de donn\u00e9es</li> <li>Flask-WTF : Gestion des formulaires</li> <li>Flask-Login : Gestion de l'authentification</li> <li>Flask-Migrate : Gestion des migrations de la base de donn\u00e9es</li> <li>GeoAlchemy2 : Extension SQLAlchemy pour g\u00e9rer les donn\u00e9es spatiales</li> </ul>"},{"location":"technical/architecture/#frontend","title":"Frontend","text":"<p>Le frontend utilise des technologies web standard avec quelques biblioth\u00e8ques sp\u00e9cialis\u00e9es :</p> <ul> <li>HTML5/CSS3 : Structure et mise en page</li> <li>Bootstrap : Framework CSS pour une interface responsive</li> <li>JavaScript : Logique c\u00f4t\u00e9 client</li> <li>Leaflet : Biblioth\u00e8que JavaScript pour les cartes interactives</li> </ul>"},{"location":"technical/architecture/#base-de-donnees","title":"Base de donn\u00e9es","text":"<p>La base de donn\u00e9es repose sur PostgreSQL et son extension PostGIS :</p> <ul> <li>PostgreSQL : BDD relationnelle</li> <li>PostGIS : Extension spatiale pour PostgreSQL</li> </ul>"},{"location":"technical/architecture/#authentification","title":"Authentification","text":"<p>L'authentification utilise Microsoft Entra ID pour une s\u00e9curit\u00e9 renforc\u00e9e :</p> <ul> <li>MSAL (Microsoft Authentication Library) : Int\u00e9gration avec Entra ID</li> <li>Flask-Login : Gestion des sessions utilisateurs</li> <li>OAuth 2.0 : Protocole d'autorisation</li> <li>HTTPS : Communications s\u00e9curis\u00e9es</li> </ul>"},{"location":"technical/architecture/#apis","title":"APIs","text":"<p>L'application s'int\u00e8gre avec plusieurs APIs :</p> <ul> <li>API SIRENE : R\u00e9cup\u00e9ration des informations des entreprises</li> <li>API internes : Points d'entr\u00e9e REST pour les donn\u00e9es dynamiques</li> </ul>"},{"location":"technical/architecture/#organisation-du-code","title":"Organisation du code","text":"<p>Le code source est organis\u00e9 selon la structure suivante :</p> <pre><code>Flask-Leaflet/\n\u251c\u2500\u2500 views.py            # Point d'entr\u00e9e principal (initialisation de l'app Flask et routes)\n\u251c\u2500\u2500 auth.py             # Gestion de l'authentification\n\u251c\u2500\u2500 config.py           # Configuration de l'application\n\u251c\u2500\u2500 create_db.py        # Script d'initialisation de la base de donn\u00e9es\n\u251c\u2500\u2500 forms.py            # D\u00e9finition des formulaires\n\u251c\u2500\u2500 models.py           # Mod\u00e8les de donn\u00e9es\n\u251c\u2500\u2500 static/             # Ressources statiques (CSS, JS, images)\n\u2502   \u251c\u2500\u2500 css/            # Feuilles de style\n\u2502   \u251c\u2500\u2500 js/             # Scripts JavaScript\n\u2502   \u2514\u2500\u2500 images/         # Images\n\u251c\u2500\u2500 templates/          # Templates HTML (Jinja2)\n\u2514\u2500\u2500 documentation/      # Documentation du projet\n</code></pre>"},{"location":"technical/authentication/","title":"Authentification","text":"<p>AgriCEN utilise l'authentification Microsoft Entra ID pour s\u00e9curiser l'acc\u00e8s \u00e0 l'application. Cette m\u00e9thode offre une s\u00e9curit\u00e9 robuste et facile l'acc\u00e8s utilisateur (connexion unique \u00e0 leur session M365 le matin par exemple)</p>"},{"location":"technical/authentication/#architecture-dauthentification","title":"Architecture d'authentification","text":"<p>Le syst\u00e8me d'authentification est bas\u00e9 sur le protocole OAuth 2.0 et OpenID Connect, avec Microsoft Identity Platform comme fournisseur d'identit\u00e9 :</p> <p></p>"},{"location":"technical/authentication/#implementation","title":"Impl\u00e9mentation","text":"<p>L'authentification est impl\u00e9ment\u00e9e \u00e0 l'aide des biblioth\u00e8ques suivantes :</p> <ul> <li>MSAL (Microsoft Authentication Library) : Pour l'interaction avec Microsoft Entra ID</li> <li>Flask-Login : Pour la gestion des sessions utilisateurs authentifi\u00e9s</li> </ul>"},{"location":"technical/authentication/#configuration-microsoft-entra-id","title":"Configuration Microsoft Entra ID","text":"<p>Pour fonctionner, l'application doit \u00eatre enregistr\u00e9e dans Microsoft Entra ID avec les param\u00e8tres suivants :</p> <pre><code># Extrait de config.py\nCLIENT_ID = 'votre-client-id'\nCLIENT_SECRET = 'votre-client-secret'\nAZURE_TENANT_ID = 'votre-tenant-id'\nAUTHORITY = f\"https://login.microsoftonline.com/{AZURE_TENANT_ID}\"\nSCOPE = ['User.Read']\n</code></pre>"},{"location":"technical/authentication/#classe-user","title":"Classe User","text":"<p>La classe <code>User</code> impl\u00e9mente l'interface requise par Flask-Login et g\u00e8re les informations de l'utilisateur :</p> <pre><code>class User(UserMixin):\n    def __init__(self, id, name, email, token=None):\n        self.id = id\n        self.name = name\n        self.email = email\n        self.token = token\n\n    @staticmethod\n    def get_user_from_token(token):\n        \"\"\"R\u00e9cup\u00e8re les informations de l'utilisateur \u00e0 partir du token\"\"\"\n        graph_data = requests.get(\n            'https://graph.microsoft.com/v1.0/me',\n            headers={'Authorization': f'Bearer {token}'},\n        ).json()\n\n        return User(\n            id=graph_data.get('id'),\n            name=graph_data.get('displayName'),\n            email=graph_data.get('userPrincipalName'),\n            token=token\n        )\n</code></pre>"},{"location":"technical/authentication/#fonctions-dauthentification","title":"Fonctions d'authentification","text":"<p>Le fichier <code>auth.py</code> contient les fonctions principales pour l'authentification :</p>"},{"location":"technical/authentication/#construction-de-lapplication-msal","title":"Construction de l'application MSAL","text":"<pre><code>def _build_msal_app(cache=None):\n    \"\"\"Construit l'application MSAL pour l'authentification\"\"\"\n    return msal.ConfidentialClientApplication(\n        Config.CLIENT_ID,\n        authority=Config.AUTHORITY,\n        client_credential=Config.CLIENT_SECRET,\n        token_cache=cache\n    )\n</code></pre>"},{"location":"technical/authentication/#construction-de-lurl-dauthentification","title":"Construction de l'URL d'authentification","text":"<pre><code>def _build_auth_url(authority=None, scopes=None, state=None):\n    \"\"\"Construit l'URL d'authentification\"\"\"\n    return _build_msal_app().get_authorization_request_url(\n        scopes or Config.SCOPE,\n        state=state or str(uuid.uuid4()),\n        redirect_uri=url_for('auth_callback', _external=True, _scheme='https')\n    )\n</code></pre>"},{"location":"technical/authentication/#recuperation-du-token","title":"R\u00e9cup\u00e9ration du token","text":"<pre><code>def _get_token_from_code(code):\n    \"\"\"R\u00e9cup\u00e8re le token \u00e0 partir du code d'autorisation\"\"\"\n    result = _build_msal_app().acquire_token_by_authorization_code(\n        code,\n        scopes=Config.SCOPE,\n        redirect_uri=url_for('auth_callback', _external=True, _scheme='https')\n    )\n    return result\n</code></pre>"},{"location":"technical/authentication/#routes-dauthentification","title":"Routes d'authentification","text":"<p>Les routes suivantes sont d\u00e9finies pour g\u00e9rer le processus d'authentification :</p>"},{"location":"technical/authentication/#page-de-connexion","title":"Page de connexion","text":"<pre><code>@app.route('/login')\ndef login():\n    \"\"\"Page de connexion\"\"\"\n    if current_user.is_authenticated:\n        return redirect(url_for('map_page'))\n\n    # G\u00e9n\u00e8re l'URL d'authentification Microsoft\n    auth_url = _build_auth_url()\n    return render_template('login.html', auth_url=auth_url)\n</code></pre>"},{"location":"technical/authentication/#callback-dauthentification","title":"Callback d'authentification","text":"<pre><code>@app.route('/auth/callback')\ndef auth_callback():\n    \"\"\"Callback apr\u00e8s authentification Microsoft\"\"\"\n    if request.args.get('error'):\n        flash(f\"Erreur lors de l'authentification: {request.args.get('error_description')}\", 'danger')\n        return redirect(url_for('login'))\n\n    if request.args.get('code'):\n        # R\u00e9cup\u00e8re le token \u00e0 partir du code\n        result = _get_token_from_code(request.args.get('code'))\n\n        if 'error' in result:\n            flash(f\"Erreur lors de l'authentification: {result.get('error_description')}\", 'danger')\n            return redirect(url_for('login'))\n\n        # R\u00e9cup\u00e8re les informations de l'utilisateur\n        token = result.get('access_token')\n        user = User.get_user_from_token(token)\n\n        # Sauvegarde l'utilisateur dans la session\n        session['user'] = {\n            'id': user.id,\n            'name': user.name,\n            'email': user.email,\n            'token': token\n        }\n\n        # Connecte l'utilisateur\n        login_user(user)\n\n        # Redirige vers la page demand\u00e9e ou la page d'accueil\n        next_page = session.get('next', url_for('map_page'))\n        session.pop('next', None)\n        return redirect(next_page)\n\n    return redirect(url_for('login'))\n</code></pre>"},{"location":"technical/authentication/#deconnexion","title":"D\u00e9connexion","text":"<pre><code>@app.route('/logout')\ndef logout():\n    \"\"\"D\u00e9connexion\"\"\"\n    logout_user()\n    session.clear()\n    return redirect(url_for('login'))\n</code></pre>"},{"location":"technical/authentication/#protection-des-routes","title":"Protection des routes","text":"<p>Les routes qui n\u00e9cessitent une authentification sont prot\u00e9g\u00e9es par le d\u00e9corateur <code>@login_required</code> :</p> <pre><code>@app.route('/map_page')\n@login_required\ndef map_page():\n    # Contenu accessible uniquement aux utilisateurs connect\u00e9s\n    pass\n</code></pre> <p>Si un utilisateur non authentifi\u00e9 tente d'acc\u00e9der \u00e0 une route prot\u00e9g\u00e9e, il est automatiquement redirig\u00e9 vers la page de connexion.</p>"},{"location":"technical/authentication/#securite","title":"S\u00e9curit\u00e9","text":"<p>Mesures de s\u00e9curit\u00e9 mises en place :</p> <ul> <li>HTTPS obligatoire </li> <li>Timeout des sessions configur\u00e9 pour d\u00e9connecter automatiquement les utilisateurs inactifs au bout de 2h</li> <li>Stockage s\u00e9curis\u00e9 des informations de session c\u00f4t\u00e9 serveur</li> <li>Validation des tokens par l'API Graph Microsoft</li> </ul>"},{"location":"technical/authentication/#gestion-des-sessions-utilisateurs-expirees","title":"Gestion des sessions utilisateurs expir\u00e9es :","text":"<p>Avec Flask-session, l'objet session stocke les informations temporaires par utilisateur apr\u00e8s qu'ils se soient logu\u00e9s. Par d\u00e9faut ces sessions sont stock\u00e9es en mode Filesystem et s'accumulent petit \u00e0 petit sur le disque dans un dossier flask_session.</p> <p>Un script shell ex\u00e9cut\u00e9 automatique via cron a donc \u00e9t\u00e9 mis en place pour supprimer toutes les sessions de plus de 24h. </p> <p>Script bash &gt;_ cleanup_sessions.sh :</p>"},{"location":"technical/authentication/#binbash","title":"!/bin/bash","text":""},{"location":"technical/authentication/#-","title":"-------------","text":""},{"location":"technical/authentication/#configuration-dune-tache-cron-pour-nettoyer-les-sessions-flask","title":"Configuration d'une tache cron pour nettoyer les sessions Flask","text":""},{"location":"technical/authentication/#-_1","title":"-------------","text":""},{"location":"technical/authentication/#chemin-vers-le-dossier-contenant-les-fichiers-de-session-flask","title":"Chemin vers le dossier contenant les fichiers de session Flask","text":"<p>SESSION_DIR=\"/root/app_agricole/AgriCEN/flask_session\"</p>"},{"location":"technical/authentication/#fichier-de-log-au-cas-zou","title":"Fichier de log (au cas zou)","text":"<p>LOG_FILE=\"/root/app_agricole/AgriCEN/logs/flask_session_cleanup.log\"</p>"},{"location":"technical/authentication/#creation-du-dossier-de-logs","title":"Cr\u00e9ation du dossier de logs","text":"<p>mkdir -p \"$(dirname \"$LOG_FILE\")\"</p>"},{"location":"technical/authentication/#verifie-que-le-dossier-existe","title":"V\u00e9rifie que le dossier existe","text":"<p>if [ ! -d \"$SESSION_DIR\" ]; then     echo \"$(date '+%Y-%m-%d %H:%M:%S') - ERREUR : Le dossier $SESSION_DIR n'existe pas.\" &gt;&gt; \"$LOG_FILE\"     exit 1 fi</p>"},{"location":"technical/authentication/#purge-des-fichiers-de-plus-de-24h-1440-minutes","title":"Purge des fichiers de plus de 24h (1440 minutes)","text":"<p>echo \"$(date '+%Y-%m-%d %H:%M:%S') - D\u00e9but de la purge des sessions de plus de 24h.\" &gt;&gt; \"$LOG_FILE\" find \"$SESSION_DIR\" -type f -mmin +1440 -print -delete &gt;&gt; \"$LOG_FILE\" 2&gt;&amp;1</p>"},{"location":"technical/authentication/#fin-de-tache","title":"Fin de t\u00e2che","text":"<p>echo \"$(date '+%Y-%m-%d %H:%M:%S') - Purge termin\u00e9e.\" &gt;&gt; \"$LOG_FILE\"</p> <p>La tache cron:</p> <p>0 3 * * * /root/app_agricole/AgriCEN/cleanup_sessions.sh</p> <p>Piste d'am\u00e9lioration: Redis ?</p>"},{"location":"technical/configuration/","title":"Configuration","text":"<p>L'application AgriCEN utilise un syst\u00e8me de configuration flexible permettant d'adapter facilement l'environnement d'ex\u00e9cution (d\u00e9veloppement, production, test) sans modifier le code source.</p>"},{"location":"technical/configuration/#fichier-de-configuration-principal","title":"Fichier de configuration principal","text":"<p>Le fichier <code>config.py</code> centralise toutes les options de configuration de l'application (secrets dans .env) :</p> <pre><code>class Config:\n    # Configuration de la base de donn\u00e9es principale\n    SQLALCHEMY_DATABASE_URI = (\n        f'postgresql://{os.environ.get(\"DB_USERNAME\")}:{os.environ.get(\"DB_PASSWORD\")}'\n        f'@{os.environ.get(\"DB_HOST\")}:{db_port}/{os.environ.get(\"DB_NAME\")}'\n    )\n\n\n    # Configuration de la base de donn\u00e9es secondaire (pour la vue SitesCEN)\n    SQLALCHEMY_BINDS = {\n        'secondary': (\n            f'postgresql://{os.environ.get(\"DB_USERNAME2\")}:{encoded_password}'\n            f'@{os.environ.get(\"DB_HOST2\")}:{os.environ.get(\"DB_PORT2\")}/{os.environ.get(\"DB_NAME2\")}'\n        )\n    }\n    # Options SQLAlchemy\n    SQLALCHEMY_TRACK_MODIFICATIONS = False\n\n   # Configuration pour l'authentification Microsoft 365\n    CLIENT_ID = os.environ.get(\"AZURE_CLIENT_ID\", \"\")\n    CLIENT_SECRET = os.environ.get(\"AZURE_CLIENT_SECRET\", \"\")\n    TENANT_ID = os.environ.get(\"AZURE_TENANT_ID\", \"\")\n    AUTHORITY = f\"https://login.microsoftonline.com/{TENANT_ID}\"\n    REDIRECT_PATH = \"/auth/callback\"  # Route de redirection apr\u00e8s authentification\n    SCOPE = [\"User.Read\"]  # Permissions demand\u00e9es\n    SESSION_TYPE = \"filesystem\"  # Pour stocker les sessions utilisateur\n    PERMANENT_SESSION_LIFETIME = 7200  # Dur\u00e9e de vie de la session en secondes\n</code></pre> <p>La cl\u00e9 secr\u00e8te de session (SECRET_KEY) est g\u00e9n\u00e9r\u00e9e dynamiquement au lancement de l\u2019application\u202fdans views.py:</p> <pre><code>app.config['SECRET_KEY'] = secrets.token_hex(24)\n</code></pre>"},{"location":"technical/configuration/#variables-denvironnement","title":"Variables d'environnement","text":"<p>Les variables d'environnement sont stock\u00e9es dans un fichier .env. <pre><code># .env\n\n# Base principale\nDB_USERNAME=agricen_user\nDB_PASSWORD=motdepasse123\nDB_HOST=serveur-principal.exemple.com\nDB_PORT=5432\nDB_NAME=agricen_db\n\n# Base secondaire (Vue SitesCEN FoncierCEN)\nDB_USERNAME2=sitescen_user\nDB_PASSWORD2=motdepasse123\nDB_HOST2=serveur-secondaire.exemple.com\nDB_PORT2=5432\nDB_NAME2=sitescen_db\n\n# Configuration pour l'authentification Microsoft 365 (Entra ID)\nAZURE_CLIENT_ID=00000000-0000-0000-0000-000000000000\nAZURE_CLIENT_SECRET=xxxxxx~xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\nAZURE_TENANT_ID=11111111-1111-1111-1111-111111111111\n</code></pre></p> <p>Les variables d'environnement sont charg\u00e9es dans l'application \u00e0 l'aide du module <code>python-dotenv</code> </p>"},{"location":"technical/configuration/#configuration-de-la-base-de-donnees","title":"Configuration de la base de donn\u00e9es","text":"<p>AgriCEN utilise deux bases de donn\u00e9es PostgreSQL :</p> <ol> <li>Base principale : Stocke les donn\u00e9es de l'application (contrats, agriculteurs, etc.)</li> <li>Base secondaire : pour la vue des sites CEN dispo dans FoncierCEN</li> </ol> <p>La configuration utilise SQLAlchemy avec des \"binds\" pour g\u00e9rer ces deux connexions :</p> <pre><code># Dans config.py\nSQLALCHEMY_DATABASE_URI = 'postgresql://username:password@localhost:5432/agricen'\nSQLALCHEMY_BINDS = {\n    'secondary': 'postgresql://username:password@localhost:5432/fonciercen'\n}\n\n# Dans le code\nclass VueSites(db.Model):\n    __bind_key__ = 'secondary'  # Utilise la base secondaire\n    # ...\n</code></pre>"},{"location":"technical/configuration/#scripts-dinitialisation","title":"Scripts d'initialisation","text":"<p>Le fichier <code>create_db.py</code> contient les scripts n\u00e9cessaires pour initialiser la base de donn\u00e9es :</p> <pre><code>from app import app, db\n\ndef init_db():\n    with app.app_context():\n        db.create_all()\n        # Ins\u00e9rer les donn\u00e9es de r\u00e9f\u00e9rence si n\u00e9cessaire\n        # ...\n\nif __name__ == '__main__':\n    init_db()\n    print(\"Base de donn\u00e9es initialis\u00e9e avec succ\u00e8s.\")\n</code></pre>"},{"location":"technical/data-model/","title":"Mod\u00e8le de donn\u00e9es","text":"<p>Le mod\u00e8le de donn\u00e9es d'AgriCEN est con\u00e7u pour repr\u00e9senter efficacement les relations entre les sites naturels, les contrats agricoles, les agriculteurs et les soci\u00e9t\u00e9s. L'application utilise SQLAlchemy comme ORM (Object-Relational Mapping) pour interagir avec la base de donn\u00e9es PostgreSQL.</p>"},{"location":"technical/data-model/#diagramme-entite-relation","title":"Diagramme entit\u00e9-relation","text":""},{"location":"technical/data-model/#structure-de-la-base-de-donnees","title":"Structure de la base de donn\u00e9es","text":"<p>La base de donn\u00e9es est organis\u00e9e en deux sch\u00e9mas principaux :</p> <ol> <li>saisie : Contient les tables de donn\u00e9es op\u00e9rationnelles</li> <li>referentiel : Contient les tables de r\u00e9f\u00e9rence (valeurs fixes)</li> </ol>"},{"location":"technical/data-model/#tables-principales","title":"Tables principales","text":""},{"location":"technical/data-model/#agriculteur","title":"Agriculteur","text":"<pre><code>class Agriculteur(db.Model):\n    __tablename__ = 'agriculteur'\n    __table_args__ = {'schema': 'saisie'}\n    id_agriculteur = db.Column(db.Integer, primary_key=True)\n    nom_agri = db.Column(db.String(100), nullable=False)\n    prenom_agri = db.Column(db.String(50), nullable=False)\n    date_naissance = db.Column(db.Date)\n</code></pre> <p>Cette table enregistre les informations des agriculteurs individuels.</p>"},{"location":"technical/data-model/#societe","title":"Societe","text":"<pre><code>class Societe(db.Model):\n    __tablename__ = 'societe'\n    __table_args__ = {'schema': 'saisie'}\n    id_societe = db.Column(db.Integer, primary_key=True)\n    nom_societe = db.Column(db.String(100))\n    contact = db.Column(db.String(100), nullable=False)\n    siret = db.Column(db.String(14), unique=True)\n    categorie_juridique = db.Column(db.String(4), db.ForeignKey('referentiel.type_categorie_juridique.code_type_categorie_juridique'))\n    activite_principale = db.Column(db.String(6), db.ForeignKey('referentiel.type_activite_principale.code_type_activite_principale'))\n    tranche_effectif = db.Column(db.String(2), db.ForeignKey('referentiel.type_tranche_effectif.code_type_tranche_effectif'))\n    adresse_etablissement = db.Column(db.String(150))\n    commune_etablissement = db.Column(db.String(150))\n    nom_etablissement = db.Column(db.String(150))\n    remarques = db.Column(db.String(300))\n</code></pre> <p>Cette table stocke les informations des soci\u00e9t\u00e9s/exploitations agricoles.</p>"},{"location":"technical/data-model/#contrat","title":"Contrat","text":"<pre><code>class Contrat(db.Model):\n    __tablename__ = 'contrat'\n    __table_args__ = {'schema': 'saisie'}\n    id_contrat = db.Column(db.Integer, primary_key=True)\n    surf_contractualisee = db.Column(db.Numeric(4, 2))\n    date_signature = db.Column(db.Date)\n    id_type_contrat = db.Column(db.Integer, db.ForeignKey('referentiel.type_contrat.id_type_contrat'))\n    id_societe = db.Column(db.Integer, db.ForeignKey('saisie.societe.id_societe'))\n    id_referent = db.Column(db.Integer, db.ForeignKey('saisie.referent.id_referent'))\n</code></pre> <p>Table centrale qui repr\u00e9sente les contrats agricoles avec leurs caract\u00e9ristiques.</p>"},{"location":"technical/data-model/#tables-dassociation","title":"Tables d'association","text":""},{"location":"technical/data-model/#agriculteursociete","title":"AgriculteurSociete","text":"<pre><code>class AgriculteurSociete(db.Model):\n    __tablename__ = 'agriculteur_societe'\n    __table_args__ = {'schema': 'saisie'}\n    id_agriculteur = db.Column(db.Integer, db.ForeignKey('saisie.agriculteur.id_agriculteur'), primary_key=True)\n    id_societe = db.Column(db.Integer, db.ForeignKey('saisie.societe.id_societe'), primary_key=True)\n</code></pre> <p>Table d'association pour la relation many-to-many entre agriculteurs et soci\u00e9t\u00e9s.</p>"},{"location":"technical/data-model/#typeproductionsociete","title":"TypeProductionSociete","text":"<pre><code>class TypeProductionSociete(db.Model):\n    __tablename__ = 'type_production_societe'\n    __table_args__ = {'schema': 'saisie'}\n    id_societe = db.Column(db.Integer, db.ForeignKey('saisie.societe.id_societe'), primary_key=True)\n    id_type_production = db.Column(db.Integer, db.ForeignKey('referentiel.type_production.id_type_production'), primary_key=True)\n    id_mode_production = db.Column(db.Integer, db.ForeignKey('referentiel.mode_production.id'))\n</code></pre> <p>Association entre une soci\u00e9t\u00e9 et ses types de production, avec le mode de production associ\u00e9.</p>"},{"location":"technical/data-model/#produitfinicontrat","title":"ProduitFiniContrat","text":"<pre><code>class ProduitFiniContrat(db.Model):\n    __tablename__ = 'produit_fini_contrat'\n    __table_args__ = {'schema': 'saisie'}\n    id_type_produit_fini = db.Column(db.Integer, db.ForeignKey('referentiel.type_produit_fini.id_type_produit_fini'), primary_key=True)\n    id_contrat = db.Column(db.Integer, db.ForeignKey('saisie.contrat.id_contrat'), primary_key=True)\n</code></pre> <p>Association entre un contrat et les produits finis r\u00e9sultant de l'activit\u00e9.</p>"},{"location":"technical/data-model/#typemilieucontrat","title":"TypeMilieuContrat","text":"<pre><code>class TypeMilieuContrat(db.Model):\n    __tablename__ = 'type_milieu_contrat'\n    __table_args__ = {'schema': 'saisie'}\n    id_type_milieu = db.Column(db.Integer, db.ForeignKey('referentiel.type_milieu.id_type_milieu'), primary_key=True)\n    id_contrat = db.Column(db.Integer, db.ForeignKey('saisie.contrat.id_contrat'), primary_key=True)\n</code></pre> <p>Association entre un contrat et les types de milieux concern\u00e9s.</p>"},{"location":"technical/data-model/#contratsitecen","title":"ContratSiteCEN","text":"<pre><code>class ContratSiteCEN(db.Model):\n    __tablename__ = 'contrat_site_cen'\n    __table_args__ = {'schema': 'saisie'}\n    id_site = db.Column(db.Integer, primary_key=True)\n    id_contrat = db.Column(db.Integer, db.ForeignKey('saisie.contrat.id_contrat'), primary_key=True)\n    code_site = db.Column(db.String(25))\n    nom_site = db.Column(db.String(250))\n</code></pre> <p>Association entre un contrat et un site CEN, avec les informations du site.</p>"},{"location":"technical/data-model/#tables-de-reference","title":"Tables de r\u00e9f\u00e9rence","text":""},{"location":"technical/data-model/#typecontrat","title":"TypeContrat","text":"<pre><code>class TypeContrat(db.Model):\n    __tablename__ = 'type_contrat'\n    __table_args__ = {'schema': 'referentiel'}\n    id_type_contrat = db.Column(db.Integer, primary_key=True)\n    appellation_contrat = db.Column(db.String(100), nullable=False)\n</code></pre> <p>D\u00e9finit les diff\u00e9rents types de contrats possibles.</p>"},{"location":"technical/data-model/#typeproduction","title":"TypeProduction","text":"<pre><code>class TypeProduction(db.Model):\n    __tablename__ = 'type_production'\n    __table_args__ = {'schema': 'referentiel'}\n    id_type_production = db.Column(db.Integer, primary_key=True)\n    nature_production = db.Column(db.String(50))\n</code></pre> <p>Liste des types de production agricole.</p>"},{"location":"technical/data-model/#modeproduction","title":"ModeProduction","text":"<pre><code>class ModeProduction(db.Model):\n    __tablename__ = 'mode_production'\n    __table_args__ = {'schema': 'referentiel'}\n    id = db.Column(db.Integer, primary_key=True, autoincrement=True)\n    nom = db.Column(db.String(50), unique=True, nullable=False)\n</code></pre> <p>Modes de production (conventionnel, biologique, etc.).</p>"},{"location":"technical/data-model/#typemilieu","title":"TypeMilieu","text":"<pre><code>class TypeMilieu(db.Model):\n    __tablename__ = 'type_milieu'\n    __table_args__ = {'schema': 'referentiel'}\n    id_type_milieu = db.Column(db.Integer, primary_key=True)\n    milieu = db.Column(db.String(100))\n</code></pre> <p>Types de milieux naturels.</p>"},{"location":"technical/data-model/#vue-spatiale","title":"Vue spatiale","text":"<pre><code>class VueSites(db.Model):\n    __bind_key__ = 'secondary'  # Associe ce mod\u00e8le \u00e0 la base secondaire\n    __tablename__ = 'site_geojson'\n    __table_args__ = {'schema': 'saisie'}  \n\n    idsite = db.Column(db.Integer, primary_key=True)\n    codesite = db.Column(db.String(10))\n    nom_site = db.Column(db.String(150))\n    geom = db.Column(Geometry('MultiPolygon'))\n</code></pre> <p>Vue sp\u00e9ciale qui repr\u00e9sente les sites avec leur g\u00e9om\u00e9trie spatiale.</p>"},{"location":"technical/data-model/#relations-et-contraintes","title":"Relations et contraintes","text":"<p>Le mod\u00e8le impl\u00e9mente plusieurs types de relations :</p> <ul> <li>One-to-Many : Un r\u00e9f\u00e9rent peut superviser plusieurs contrats</li> <li>Many-to-Many : Un contrat peut concerner plusieurs types de milieux</li> <li>Many-to-Many avec attributs : Une soci\u00e9t\u00e9 peut avoir plusieurs types de production, chacun avec un mode de production associ\u00e9</li> </ul> <p>Des contraintes sont appliqu\u00e9es au niveau de la base de donn\u00e9es :</p> <ul> <li>Cl\u00e9s \u00e9trang\u00e8res : Garantissent l'int\u00e9grit\u00e9 r\u00e9f\u00e9rentielle</li> <li>Contraintes uniques : Par exemple, le SIRET unique pour une soci\u00e9t\u00e9</li> </ul>"},{"location":"technical/data-model/#utilisation-de-geoalchemy2","title":"Utilisation de GeoAlchemy2","text":"<p>L'extension GeoAlchemy2 permet de travailler avec les donn\u00e9es spatiales :</p> <pre><code>from geoalchemy2 import Geometry\nfrom shapely.geometry import mapping\nfrom geoalchemy2.shape import to_shape\n\n# D\u00e9finition d'une colonne spatiale\ngeom = db.Column(Geometry('MultiPolygon'))\n\n# Conversion entre PostGIS et GeoJSON\nshape = to_shape(site.geom)\ngeojson = mapping(shape)\n</code></pre> <p>Elle permet d'afficher les sites CEN sur la carte Leaflet.</p>"},{"location":"user-guide/contract-management/","title":"Gestion des contrats","text":""},{"location":"user-guide/contract-management/#creation-dun-nouveau-contrat","title":"Cr\u00e9ation d'un nouveau contrat","text":"<p>Pour cr\u00e9er un nouveau contrat, suivez ces \u00e9tapes :</p> <ol> <li>Depuis l'interface cartographique, cliquez sur le site CEN concern\u00e9</li> <li>Vous arriverez sur un formulaire de saisie avec plusieurs onglets</li> <li>Remplissez les informations requises dans chaque onglet</li> <li>Enregistrez le contrat avec le bouton \"Enregistrer les donn\u00e9es\" en bas du formulaire</li> </ol> <p></p>"},{"location":"user-guide/contract-management/#structure-du-formulaire","title":"Structure du formulaire","text":"<p>Le formulaire de cr\u00e9ation/\u00e9dition de contrat est organis\u00e9 en plusieurs sections :</p>"},{"location":"user-guide/contract-management/#informations-generales","title":"Informations g\u00e9n\u00e9rales","text":"<ul> <li>Code site : Code du site CEN concern\u00e9</li> <li>Nom du site : Nom du site CEN concern\u00e9</li> </ul>"},{"location":"user-guide/contract-management/#exploitation","title":"Exploitation","text":"<p>Cette section regroupe toutes les donn\u00e9es relatives \u00e0 l'exploitation :</p> <ul> <li>N\u00b0 SIRET : Pour les soci\u00e9t\u00e9s, avec r\u00e9cup\u00e9ration automatique des donn\u00e9es via l'API SIRENE</li> <li>Nom de la Soci\u00e9t\u00e9 : nom de la soci\u00e9t\u00e9 r\u00e9cup\u00e9r\u00e9 automatiquement via l'API SIRENE</li> <li>Adresse compl\u00e8te de l'\u00e9tablissement : adresse de l'\u00e9tablissement r\u00e9cup\u00e9r\u00e9e automatiquement via l'API SIRENE</li> <li>Activit\u00e9 principale : activit\u00e9 principale r\u00e9cup\u00e9r\u00e9e automatiquement via l'API SIRENE</li> <li>Cat\u00e9gorie juridique : cat\u00e9gorie juridique r\u00e9cup\u00e9r\u00e9e automatiquement via l'API SIRENE</li> <li>Tranche d'effectif salari\u00e9 de l'\u00e9tablissement : tranche d'effectif r\u00e9cup\u00e9r\u00e9e automatiquement via l'API SIRENE</li> <li>Contact : contact (t\u00e9l\u00e9phone ou email)</li> <li>Recherche d'un exploitant existant : champ permettant de r\u00e9cup\u00e9rer le nom et le pr\u00e9nom d'un exploitant existant ou de cr\u00e9er un nouvel exploitant</li> <li>Nom de l'exploitant : saisie du nom de l'exploitant si non fait via le champ \"Rechercher un exploitant\"</li> <li>Pr\u00e9nom de l'exploitant : saisie du pr\u00e9nom de l'exploitant si non fait via le champ \"Rechercher un exploitant\"</li> <li>Date de naissance : date de naissance de l'exploitant</li> <li>Types de production Biologique : saisie des types de production biologique</li> <li>Types de production Conventional : saisie des types de production conventionnel</li> </ul>"},{"location":"user-guide/contract-management/#partenariat-cen","title":"Partenariat CEN","text":"<p>Cette section regroupe les informations relatives au contrat agricole :</p> <ul> <li>Type de contrat : type de contrat concern\u00e9</li> <li>Date de signature : date de signature du contrat</li> <li>Date de prise d'effet : date de prise d'effet du contrat</li> <li>Date de fin : date de fin du contrat</li> <li>Produits finis : S\u00e9lection multiple possible (viande, lait, c\u00e9r\u00e9ales, etc.)</li> <li>Type de milieux : S\u00e9lection multiple possible (prairie, zone humide, for\u00eat, etc.)</li> <li>Nom de la personne r\u00e9f\u00e9rente : nom du salari\u00e9 CEN r\u00e9f\u00e9rebt du contrat agricole concern\u00e9</li> <li>Pr\u00e9nom de la personne r\u00e9f\u00e9rente : pr\u00e9nom du salari\u00e9 CEN r\u00e9f\u00e9rebt du contrat agricole concern\u00e9</li> <li>Types de milieu : S\u00e9lection multiple possible (prairie, zone humide, for\u00eat, etc.)</li> </ul>"},{"location":"user-guide/contract-management/#modification-dun-contrat-existant","title":"Modification d'un contrat existant","text":"<p>Pour modifier un contrat :</p> <ol> <li>Depuis l'interface cartographique, cliquez sur l'ic\u00f4ne du contrat souhait\u00e9 puis cliquez sur \"Modifier\" en bas du volet lat\u00e9ral</li> <li>Le formulaire d'\u00e9dition s'ouvre avec les donn\u00e9es existantes pr\u00e9-remplies</li> <li>Effectuez vos modifications</li> <li>Cliquez sur \"Enregistrer les donn\u00e9es\" pour enregistrer les changements</li> </ol>"},{"location":"user-guide/contract-management/#suppression-dun-contrat","title":"Suppression d'un contrat","text":"<p>Pour supprimer un contrat :</p> <ol> <li>Depuis l'interface cartographique, cliquez sur l'ic\u00f4ne du contrat souhait\u00e9 puis cliquez sur \"Supprimer\" en bas du volet lat\u00e9ral</li> </ol> <p>Attention</p> <p>La suppression d'un contrat est irr\u00e9versible. </p>"},{"location":"user-guide/contract-management/#validation-des-donnees","title":"Validation des donn\u00e9es","text":"<p>Le formulaire int\u00e8gre plusieurs validations pour garantir la qualit\u00e9 des donn\u00e9es :</p> <ul> <li>V\u00e9rification des champs obligatoires</li> <li>Validation des formats (dates, nombres)</li> <li>...</li> </ul> <p>Les erreurs sont affich\u00e9es directement sous les champs concern\u00e9s, avec des explications d\u00e9taill\u00e9es pour corriger rapidement les probl\u00e8mes.</p>"},{"location":"user-guide/data-visualization/","title":"Visualisation des donn\u00e9es","text":"<p>AgriCEN propose des outils avanc\u00e9s de visualisation et d'analyse des donn\u00e9es pour faciliter le suivi des contrats et l'aide \u00e0 la d\u00e9cision.</p>"},{"location":"user-guide/data-visualization/#tableau-de-bord-superset","title":"Tableau de bord Superset","text":"<p>Les visualisations sont principalement accessibles via une int\u00e9gration avec Superset. </p>"},{"location":"user-guide/data-visualization/#acces-au-tableau-de-bord","title":"Acc\u00e8s au tableau de bord","text":"<p>Pour acc\u00e9der au tableau de bord :</p> <ol> <li>Dans AgriCEN, cliquez sur l'onglet \"Dataviz\"</li> <li>Vous serez automatiquement redirig\u00e9 vers l'interface Superset pr\u00e9charg\u00e9e</li> <li>Pas d'authentification requise (\u00e0 modifier si besoin)</li> </ol>"},{"location":"user-guide/data-visualization/#integration-dans-des-rapports-externes","title":"Int\u00e9gration dans des rapports externes","text":"<p>Les visualisations peuvent \u00eatre int\u00e9gr\u00e9es dans des documents externes :</p> <ul> <li>URL partageables pour acc\u00e9der directement \u00e0 une visualisation sp\u00e9cifique</li> <li>Export au format image (PNG, JPEG) pour int\u00e9gration dans des documents</li> <li>Export au format PDF pour des rapports complets</li> </ul>"},{"location":"user-guide/data-visualization/#rapports-exportables","title":"Rapports exportables","text":""},{"location":"user-guide/data-visualization/#export-pdf","title":"Export PDF","text":"<p>Pour exporter les donn\u00e9es au format PDF :</p> <ol> <li>Dans la navbar principale, cliquez sur le bouton \"...\"</li> <li>Cliquez ensuite sur \"Download\" -&gt; \"Export to PDF\"</li> </ol>"},{"location":"user-guide/login/","title":"Connexion \u00e0 l'application","text":"<p>AgriCEN utilise l'authentification Microsoft Entra ID pour s\u00e9curiser l'acc\u00e8s \u00e0 l'application. Ce syst\u00e8me garantit que seuls les utilisateurs autoris\u00e9s peuvent acc\u00e9der aux donn\u00e9es.</p>"},{"location":"user-guide/login/#ecran-de-connexion","title":"\u00c9cran de connexion","text":"<p>L'\u00e9cran de connexion est la premi\u00e8re interface que vous rencontrez lors de l'acc\u00e8s \u00e0 l'application. Il comporte un bouton \"Se connecter avec Microsoft\" qui vous redirige vers l'authentification Microsoft Entra ID.</p>"},{"location":"user-guide/login/#processus-dauthentification","title":"Processus d'authentification","text":"<ol> <li>Acc\u00e8s \u00e0 l'application : Acc\u00e9dez \u00e0 l'URL de l'application AgriCEN</li> <li>Redirection vers Microsoft : Cliquez sur le bouton \"Se connecter avec Microsoft\"</li> <li>Authentification : Saisissez vos identifiants Microsoft (email et mot de passe)</li> <li>Autorisation : Si c'est votre premi\u00e8re connexion, vous devrez peut-\u00eatre autoriser l'application \u00e0 acc\u00e9der \u00e0 votre compte</li> <li>Redirection vers l'application : Une fois authentifi\u00e9, vous serez automatiquement redirig\u00e9 vers l'interface principale d'AgriCEN</li> </ol>"},{"location":"user-guide/login/#sessions-et-deconnexion","title":"Sessions et d\u00e9connexion","text":"<ul> <li>Dur\u00e9e de session : Votre session reste active pendant 2 heures. Au-del\u00e0, une reconnexion sera n\u00e9cessaire.</li> <li>D\u00e9connexion manuelle : \u00c0 tout moment, vous pouvez vous d\u00e9connecter en cliquant sur le bouton \"D\u00e9connexion\" situ\u00e9 dans le menu utilisateur en haut \u00e0 droite de l'interface.</li> </ul>"},{"location":"user-guide/login/#problemes-de-connexion","title":"Probl\u00e8mes de connexion","text":"<p>Si vous rencontrez des difficult\u00e9s pour vous connecter :</p> <ol> <li>V\u00e9rifiez votre compte : Assurez-vous d'utiliser le compte Microsoft qui vous a \u00e9t\u00e9 attribu\u00e9 pour acc\u00e9der \u00e0 l'application</li> <li>Videz le cache du navigateur : Les probl\u00e8mes persistants peuvent parfois \u00eatre r\u00e9solus en effa\u00e7ant le cache et les cookies</li> <li>Contactez la DSI : Si les probl\u00e8mes persistent, contactez la DSI</li> </ol>"},{"location":"user-guide/login/#autorisations","title":"Autorisations","text":"<p>Les autorisations dans AgriCEN sont g\u00e9r\u00e9es au niveau d'Azure AD. Selon votre profil, vous pourriez avoir acc\u00e8s \u00e0 diff\u00e9rentes fonctionnalit\u00e9s :</p> <ul> <li>Acc\u00e8s en lecture seule : Visualisation des donn\u00e9es sans possibilit\u00e9 de modification</li> <li>Acc\u00e8s en \u00e9dition : Possibilit\u00e9 de cr\u00e9er et modifier des contrats</li> <li>Acc\u00e8s administrateur : Fonctionnalit\u00e9s administratives suppl\u00e9mentaires</li> </ul>"},{"location":"user-guide/map-interface/","title":"Interface cartographique","text":"<p>L'interface cartographique est le c\u0153ur de l'application AgriCEN. Elle permet de visualiser et d'interagir avec les sites CEN et les contrats agricoles associ\u00e9s.</p>"},{"location":"user-guide/map-interface/#vue-densemble","title":"Vue d'ensemble","text":"<p>L'interface se compose de :</p> <ol> <li>Carte interactive : Affiche les sites CEN et les contrats agricoles</li> <li>Barre de recherche : Permet de rechercher un contrat selon diff\u00e9rents crit\u00e8res via un panel de filtres</li> <li>Onglet \"Dataviz\" : Volet permettant de visualiser le dashboard des donn\u00e9es agricoles</li> <li>Onglet \"Carto\" : Volet permettant de retourner sur la carte interactive</li> <li>Nom utilisateur : Nom de l'utilisateur connect\u00e9 avec un bouton de d\u00e9connexion</li> </ol>"},{"location":"user-guide/map-interface/#navigation-sur-la-carte","title":"Navigation sur la carte","text":"<p>La carte utilise la biblioth\u00e8que Leaflet et offre les fonctionnalit\u00e9s suivantes :</p> <ul> <li>Zoom : Utilisez la molette de la souris ou les boutons +/- pour zoomer/d\u00e9zoomer</li> <li>D\u00e9placement : Cliquez et maintenez pour d\u00e9placer la carte</li> <li>S\u00e9lection d'un site : Cliquez sur un site pour afficher ses informations dans un volet lat\u00e9ral</li> <li>Fond de carte : Changez le fond de carte via le bouton en haut \u00e0 droite (satellite, OpenStreetMap, etc.)</li> </ul>"},{"location":"user-guide/map-interface/#sites-cen","title":"Sites CEN","text":"<p>Les sites CEN sont repr\u00e9sent\u00e9s par des polygones verts transparents sur la carte. Deux types d'interactions sont possibles :</p> <ul> <li>Un simple clic permet d'ajouter un contrat sur le site</li> <li>un simple passage de la souris sur le site permet de visualiser le nom du site et son code</li> </ul>"},{"location":"user-guide/map-interface/#recherche-et-filtres","title":"Recherche et filtres","text":"<p>Les filtres permettent d'affiner l'affichage des contrats sur la carte selon :</p> <ul> <li>Nom et/ou pr\u00e9nom de l'agriculteur</li> <li>Nom de la soci\u00e9t\u00e9</li> <li>Type de contrat</li> <li>Nom du r\u00e9f\u00e9rent </li> <li>Type de production</li> <li>Type de produit fini</li> <li>Contrats en cours</li> <li>Surface contractualis\u00e9e</li> </ul>"},{"location":"user-guide/map-interface/#actions-disponibles","title":"Actions disponibles","text":"<p>Depuis l'interface cartographique, vous pouvez :</p> <ol> <li>Cr\u00e9er un nouveau contrat : en cliquant sur le site CEN concern\u00e9 (il n'est pas possible de cr\u00e9er un contrat en dehors d'un site CEN)</li> <li>Modifier un contrat : clic sur l'icone du contrat puis sur le bouton \"Modifier\" dans le volet lat\u00e9ral</li> <li>Supprimer un contrat : clic sur l'icone du contrat puis sur le bouton \"Supprimer\" dans le volet lat\u00e9ral</li> <li>Rechercher un contrat : en cliquant sur l'onglet \"Recherche\" et en utilisant les filtres disponibles</li> <li>Acc\u00e9der aux statistiques : en cliquant sur l'onglet \"Dataviz\"</li> </ol>"},{"location":"user-guide/presentation/","title":"Pr\u00e9sentation d'AgriCEN","text":""},{"location":"user-guide/presentation/#quest-ce-quagricen","title":"Qu'est-ce qu'AgriCEN ?","text":"<p>AgriCEN est une application web d\u00e9velopp\u00e9e par la DSI du CEN-NA qui permet d'inventorier et de g\u00e9rer les contrats agricoles li\u00e9s aux diff\u00e9rents sites CEN.</p> <p>L'application centralise les informations sur :</p> <ul> <li>Les contrats agricoles \u00e9tablis entre le CEN-NA et les exploitants</li> <li>Les agriculteurs partenaires et leurs exploitations</li> <li>Les types de productions et leurs modes d'exploitation (bio ou conventionnel)</li> <li>Les produits finis produits par les agriculteurs partenaires</li> <li>Les milieux naturels li\u00e9s aux diff\u00e9rents sites CEN</li> <li>Les salari\u00e9s r\u00e9f\u00e9rents en charge des diff\u00e9rents contrats</li> </ul>"},{"location":"user-guide/presentation/#objectifs-de-lapplication","title":"Objectifs de l'application","text":"<p>AgriCEN a \u00e9t\u00e9 d\u00e9velopp\u00e9e pour r\u00e9pondre aux besoins suivants :</p> <ol> <li>Centralisation des donn\u00e9es : Regrouper en un seul endroit toutes les informations relatives aux contrats agricoles</li> <li>Visualisation cartographique : Permettre une repr\u00e9sentation spatiale des sites du CEN et des contrats associ\u00e9s</li> <li>Simplification de la gestion administrative : Faciliter la cr\u00e9ation, modification et suivi des contrats</li> <li>Int\u00e9gration des donn\u00e9es externes : R\u00e9cup\u00e9rer automatiquement les informations sur les entreprises via l'API SIRENE</li> <li>Analyse des donn\u00e9es : Produire des indicateurs et tableaux de bord pour le pilotage de l'activit\u00e9</li> </ol>"},{"location":"user-guide/presentation/#architecture-de-lapplication","title":"Architecture de l'application","text":"<p>AgriCEN est construite selon une architecture web utilisant :</p> <ul> <li>Flask : Framework web Python pour le backend</li> <li>PostgreSQL/PostGIS : Base de donn\u00e9es relationnelle avec extension spatiale</li> <li>Leaflet : Biblioth\u00e8que JavaScript pour les cartes interactives</li> <li>Bootstrap : Framework CSS pour l'interface utilisateur</li> <li>Microsoft Azure AD : Syst\u00e8me d'authentification</li> </ul>"},{"location":"user-guide/siret-lookup/","title":"Recherche SIRET","text":"<p>AgriCEN int\u00e8gre une fonctionnalit\u00e9 permettant de rechercher et importer automatiquement les informations des entreprises \u00e0 partir de leur num\u00e9ro SIRET, gr\u00e2ce \u00e0 l'API SIRENE.</p>"},{"location":"user-guide/siret-lookup/#quest-ce-que-lapi-sirene","title":"Qu'est-ce que l'API SIRENE ?","text":"<p>L'API SIRENE (Syst\u00e8me Informatis\u00e9 du R\u00e9pertoire National des Entreprises et des \u00c9tablissements) est un service propos\u00e9 par l'INSEE qui permet d'acc\u00e9der aux informations l\u00e9gales sur les entreprises et \u00e9tablissements fran\u00e7ais.</p> <p>Cette int\u00e9gration dans AgriCEN vous permet de r\u00e9cup\u00e9rer automatiquement les informations officielles d'une entreprise sans avoir \u00e0 les saisir manuellement, r\u00e9duisant ainsi les erreurs de saisie.</p>"},{"location":"user-guide/siret-lookup/#utilisation-de-la-recherche-siret","title":"Utilisation de la recherche SIRET","text":""},{"location":"user-guide/siret-lookup/#lors-de-la-creation-ou-de-ledition-dun-contrat","title":"Lors de la cr\u00e9ation ou de l'\u00e9dition d'un contrat","text":"<ol> <li>Dans le formulaire de cr\u00e9ation/modification de contrat, acc\u00e9dez \u00e0 l'onglet \"Exploitation\"</li> <li>Entrez le num\u00e9ro SIRET (14 chiffres) dans le champ pr\u00e9vu \u00e0 cet effet</li> <li>Cliquez sur le bouton \"Rechercher\"</li> <li>Si le SIRET est valide, les informations de l'entreprise seront automatiquement remplies</li> </ol>"},{"location":"user-guide/siret-lookup/#informations-recuperees","title":"Informations r\u00e9cup\u00e9r\u00e9es","text":"<p>La recherche SIRET permet de r\u00e9cup\u00e9rer automatiquement les informations suivantes :</p> <ul> <li>Nom de l'entreprise</li> <li>Code juridique et libell\u00e9 de la forme juridique</li> <li>Code APE/NAF et libell\u00e9 de l'activit\u00e9 principale</li> <li>Adresse compl\u00e8te de l'\u00e9tablissement</li> <li>Tranche d'effectif de l'entreprise</li> </ul> <p>Ces informations sont directement int\u00e9gr\u00e9es dans le formulaire et seront enregistr\u00e9es dans la base de donn\u00e9es lors de la sauvegarde du contrat.</p>"},{"location":"user-guide/siret-lookup/#fonctions-avancees","title":"Fonctions avanc\u00e9es","text":""},{"location":"user-guide/siret-lookup/#verification-de-contrat-existant","title":"V\u00e9rification de contrat existant","text":"<p>Lorsqu'un N\u00b0 SIRET est r\u00e9cup\u00e9r\u00e9 via le formulaire d'\u00e9dition d'un contrat, le syst\u00e8me v\u00e9rifie automatiquement si un contrat existe d\u00e9j\u00e0 avec cette entreprise. Si c'est le cas :</p> <ul> <li>Une notification appara\u00eet pour vous informer</li> <li>Un lien vers le contrat existant est propos\u00e9</li> <li>Vous pouvez choisir de continuer \u00e0 cr\u00e9er un nouveau contrat ou d'\u00e9diter celui qui existe d\u00e9j\u00e0</li> </ul>"},{"location":"user-guide/siret-lookup/#resolution-des-problemes","title":"R\u00e9solution des probl\u00e8mes","text":""},{"location":"user-guide/siret-lookup/#siret-non-trouve","title":"SIRET non trouv\u00e9","text":"<p>Si le SIRET n'est pas trouv\u00e9, plusieurs raisons peuvent expliquer cela :</p> <ul> <li>Erreur de saisie dans le num\u00e9ro SIRET</li> <li>L'entreprise est tr\u00e8s r\u00e9cente et pas encore r\u00e9f\u00e9renc\u00e9e</li> <li>L'entreprise n'existe plus (radi\u00e9e)</li> <li>Probl\u00e8me temporaire avec l'API SIRENE</li> </ul>"},{"location":"user-guide/siret-lookup/#contournement-manuel","title":"Contournement manuel","text":"<p>En cas de probl\u00e8me avec la recherche automatique, vous pouvez toujours :</p> <ol> <li>Saisir manuellement les informations de l'entreprise</li> <li>Utiliser le site officiel sirene.fr pour v\u00e9rifier les informations</li> <li>Contacter le service DSI si le probl\u00e8me persiste</li> </ol>"}]}